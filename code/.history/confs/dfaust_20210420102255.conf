
train{
    save_learning_log_freq = 10
    sigma = 0.0
    plot_corr = True
    plot_num_couples = 1
    debug_proj = False
    optimize_latent = True
    base_path = /checkpoint/matanatz/
    visdom_server = devfair0101
    visdom_port = 8097
    adjust_lr = False
    save_checkpoint_frequency = 50
    plot_frequency = 1000
    preprocess = True
    auto_decoder=False
    latent_size = 256
    expname = dfaust
    dataset = {
        class = datasets.datasets.DFaustDataSet
        properties = {
            preload = False
            dataset_path = /checkpoint/matanatz/datasets/dfaust/scans_processed_sal_sigma03
            dist_file_name = _dist_triangle
            number_of_points = 60
            lengths = []
            with_dist=True

        }
    }
    
    data_split = /dfaust/train_all_every5.json
    test_split = /dfaust/test_all_every5.json
    learning_rate_schedule = [{ "Type" : "Step",
			                  "Initial" : 0.0005,
			                   "Interval" : 4000,
			                    "Factor" : 0.5
		                    },
		                    {
                                "Type" : "Step",
                                "Initial" : 0.001,
                                "Interval" : 500,
                                "Factor" : 0.5
                            }]
    network_class = model.network_vae_baseline.DeformNetwork
    test_after = [50,100,500,1000,1500,2000,2500,3000,3500,5000,7500,8500,10000,12500,15000,17500,20000,22500,25000,30000,32500,35000,37500,40000,42500,45000,47500,50000,55000,60000,65000,70000,80000,85000,90000]
}

plot{
    resolution = 100
    mc_value = 0.0
    is_uniform_grid = False
    verbose = False
    save_html = True
    is_3d=True
    save_ply = True
    overwrite=True
}
network{
    predict_normals_on_surfce = False

    encoder{
        with_normals=False
    }
    decoder_implicit
    {
        dims = [ 512, 512, 512,512,512, 512, 512,512],
        dropout = []
        dropout_prob =  0.2
        norm_layers = [0, 1, 2, 3, 4, 5, 6, 7]
        latent_in = [4]
        activation = None
        latent_dropout = False
        weight_norm = True
        xyz_dim = 3
    }
    
    loss{
        loss_type = model.loss.DeformLoss
        properties{
                recon_loss_weight = 1.0
                grad_loss_weight = 0.1
                z_weight = 0.0
                grad_on_surface_weight = 0.0
                latent_reg_weight = 0.001
            }
    }
}

include "local.conf"